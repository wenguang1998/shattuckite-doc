其他
--------------



版本号控制
******************

构件版本号控制
++++++++++++++++++++

我们将基于构件进行版本号控制。即每一个构件均拥有自己独立的版本号。

构件的版本号将按照 `Semantic Versioning 2.0`_ 标准进行编制。

在版本号变动时，必须在构件仓库目录添加新版本的发布说明，简要的阐述该版本的修改。

构件版本号的主版本号和 `系统版本号控制`_ 中的系统版本号的主版本号相同。

系统版本号控制
+++++++++++++++++++++

整个系统拥有一个独立的系统版本号。 系统版本号同样使用 `Semantic Versioning 2.0`_ 标准进行编制。

在开发过程中, 系统版本号的修订号不修改，始终为0. 完成一个迭代后, 在发布阶段递增系统版本号的次版本号。

系统次版本号递增时，需要同时发布当前版本的系统程序包含的构件版本以及概述本版改动。

.. _Semantic Versioning 2.0: https://semver.org/lang/zh-CN/

文档版本号控制
++++++++++++++++++++

开发过程中产生的文档应当拥有独立版本号。 文档版本号使用 ``X.Y`` 两级格式。X和Y分别是主版本号和次版本号。

文档的次版本号在每次迭代时进行递增。

文档的主版本号和系统及构件的主版本号一致。

对文档的内容进行小范围的修改(例如修改错别字，笔误，优化表达方式等）时, 不为文档分配新的版本号, 在文件名后加入独立的且不会重复的字符串以示区分。

团队KPI管理
***************

为了合理分配甲方提供的开发报酬(浮动分数), 开发团队将使用KPI衡量个人绩效。具体规则如下:

1. 团队中的每个成员有1000分基础KPI点数

2. 项目经理(主程序员)进行任务划分, 为每位成员安排相应的任务, 并根据任务的复杂程度, 为任务规定一个分数。

3. 若成员未能在规定时间内完成任务, 则扣除任务分数的一半。

4. 若成员在延期1/3的原定工作时间后仍未完成任务，扣除全部任务分数。

5. 最后根据每个人的剩余KPI比例来分配分数