项目任务概要
--------------

工作内容
************

具体的项目需求 **请参见** :ref:`《shattuckite 需求分析文档》 <SHADOC-002>` 

开发人员角色分配及角色职责参见 :numref:`成员组织` :ref:`成员组织`。

主要工作划分参见 :numref:`进度计划` :ref:`进度计划`。

开发人员
*************
本项目由一个规模为4人的小型团队进行开发. 团队成员情况如下

.. table:: 开发团队人员组织

    ======= ========= ============== ================== ============ ===========
    姓名    学号        学院            工作经验            工作时间      技术水平
    ======= ========= ============== ================== ============ ===========
    刘瀚骋   16231275  高等理工学院       无经验              3年          低级
    孟巧岚   16061053  计算机学院         无经验              3年          低级   
    邓健     16061136  计算机学院         无经验              3年          低级 
    许文广   16061069  计算机学院         无经验              3年          低级  
    张起铭   16061044  计算机学院         无经验              3年          低级
    ======= ========= ============== ================== ============ ===========

成员组织
###############


本次开发计划使用类似主程序员小组的方式进行小组组织。 组织结构如下图所示。

.. graphviz:: img/groupTopology.dot

各组员小组角色分配如下

.. table:: 小组成员

    ======= ========= ============= ==========
    姓名    学号        学院         小组角色
    ======= ========= ============= ==========
    刘瀚骋   16231275  高等理工学院   主程序员
    孟巧岚   16061053  计算机学院     备程序员
    邓健     16061136  计算机学院     测试程序员
    张起铭   16061044  计算机学院     测试程序员
    许文广   16061069  计算机学院     开发秘书
    ======= ========= ============= ==========


角色职责分配
################
本节叙述不同小组角色的职责

主程序员
+++++++++++++

+ 管理项目开发进度。
+ 设计项目开发路线与体系结构。
+ 具体实施软件开发及硬件设计工作。
+ 分割开发任务, 与备程序员协同完成开发任务。
+ 与测试程序员交流, 完成软件测试工作。
+ 与开发秘书共同完成文档的撰写。

备程序员
++++++++++++++

+ 与主程序员交流，具体实施软件开发任务。
+ 与开发秘书共同完成文档的撰写。

测试程序员
++++++++++++++

+ 与主程序员交流，设计各个构件的测试方法, 并编写《测试文档》。
+ 编写测试代码, 完成软件测试。
+ 软件可持续集成与可持续交付的相关工作。

开发秘书
++++++++++++++

+ 与主程序员交流, 完成《需求分析文档》及《设计文档》的撰写
+ 管理并发布软件开发过程中产生的各种文档
+ 负责与甲方交流, 确保开发团队及甲方始终保持共识。

产品
*********

本项目结束时计划交付的内容包括

.. table:: 计划交付内容

    ========================== ============ =================================
    项目名称                    类型            负责人
    ========================== ============ =================================
    《项目开发计划书》           文档               主程序员
    《需求分析》                文档               主程序员, 备程序员, 开发秘书
    《系统设计说明》             文档               主程序员, 备程序员, 开发秘书
    《测试文档》                文档                测试程序员, 开发秘书
    《系统部署指南》             文档               主程序员, 开发秘书
    测试程序                   源代码              测试程序员
    系统程序                   源代码              主程序员, 备程序员
    ========================== ============ =================================


程序和和设备
################

测试程序
++++++++++++++++++++++

本项目计划使用黑盒测试的方法，编写单元测试。

系统程序
+++++++++++++++++

系统程序将以构件为单位进行发布。

对于运行在嵌入式平台(非x86_64架构CPU)上的程序，计划直接发布交叉编译后的二进制文件及安装脚本。

对于运行在通用平台(x86_64架构CPU)上的程序, 计划以docker容器和源代码+构建脚本两种形式进行发布。


文档
#############


《项目开发计划书》
+++++++++++++++++++++

本文档用于阐述项目的开发计划。主要内容包括项目背景介绍，开发团队的组织管理方式，开发流程控制，计划交付内容及交付时间节点及风险控制等元信息。


《需求分析》
+++++++++++++++++

基于场景和数据两方面, 尽可能全面的分析本项目的需求。

基于场景的需求分析将从用户的视角出发, 讨论用户会以何种方式与本系统发生交互。使用自然语言和UML活动图, 对所有可能发生的交互场景进行建模。

基于数据的需求分析将结合基于场景的分析结果, 讨论为满足用户使用场景, 系统需要维护的数据和系统需要暴露的控制接口。
并使用 DFD( Data flow Diagram) 分别对

 1. 数据在系统中的传递与持久化
 2. 控制信号的传递

进行建模

《系统设计说明》
++++++++++++++++++++++

系统设计说明将自顶向下的描述系统的具体实现方式。自顶向下的顺序分别是设备级, 构件级, 类/方法级, 实现级四级。

设备定义为物理上独立的实体。设备级设计将规划系统运行所需要的设备以及设备间互联的基本方案。计划使用UML部署图来建模这一级的设计。

构件是运行在设备上, 且逻辑功能较为独立的软件。一个设备上可能会运行多个构件。构件级设计将规划每个构件实现的具体功能，使用的具体技术栈以及构件间的互联方式
。计划使用UML部署图来建模这一级的设计。

类/方法是组织逻辑的最小单元。若干个类/方法相互协作，组合成构件。计划使用ER图，UML类图来建模这一级的设计

实现指类/方法的具体代码。实现级文档不单独撰写，将会根据编码过程中的注释自动生成。

《测试文档》
++++++++++++++++++++++

测试文档计划阐述本项目的测试策略以及运行测试程序的方法。


运行与开发环境
******************

运行环境
##############

嵌入式终端
+++++++++++++++

.. table:: 嵌入式终端运行环境

    =============== ========================================
    项目                约束 
    =============== ========================================
    操作系统          Linux 内核版本> 3.4.1
    嵌入式CPU架构     Cortex-A8 或 Cortex-A9
    嵌入式CPU主频      主频>= 800Mhz
    内存              容量>= 500MBytes
    接口              USB2.0/RJ45/RS232(可选)/RS485(可选)
    =============== ========================================

云服务器
++++++++++

.. table:: 云服务器规格要求

    =============== ===============================
    项目                约束 
    =============== ===============================
    操作系统           Ubuntu>=16.04/Debian 9
    内存               容量>=1GBytes
    网络               带宽>=2Mbps, 公网IPV4地址
    CPU架构            x86_64
    CPU核心数          核心数>=1 core
    =============== ===============================

移动端APP
++++++++++

.. table:: 移动端App运行环境

    =============== ===============================
    项目                约束 
    =============== ===============================
    操作系统           Android >=7.0 IOS>=11.0
    Android           API Level >= 26
    =============== ===============================

桌面端APP及Web端接口
++++++++++++++++++++++

.. table:: 桌面端APP及Web端接口

    =============== ===============================================
    项目                约束 
    =============== ===============================================
    操作系统           Windows 7/10/Linux (With GNOME or KDE)
    浏览器             Chrome 版本>60.0 Firefox版本>49.0
    =============== ===============================================


开发环境
#############

.. table:: 开发环境

    ==================== =================================== =================
    项目                        名称                            提供方
    ==================== =================================== =================
    代码托管平台            Github                              免费服务
    可持续集成              私人服务器,使用Jenkins服务            自行准备
    代码编写/交叉编译        私人PC                               自行准备
    Cortex-A8代码调试       飞凌嵌入式 AM3354开发板             自行准备
    Cortex-A9代码调试       Terasic Cyclone SOC 开发板          自行准备
    Wifi传感器节点           乐鑫 ESP8266                       自行准备
    NB-IOT传感器节点         移远 BC-26 NB-IOT模组              TBD
    Lora 传感器网关         Semetech SX1301 评估版              学校提供
    Lora 传感器节点          SX1278 / SX1276                    学校提供
    ==================== =================================== =================


项目期限
*************

参见 :ref:`甲方交付时间节点要求`

本项目开发活动起始于 ``2019年3月4日`` ,结束于 ``2019年6月14日``

