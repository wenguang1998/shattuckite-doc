嵌入式终端软件架构
+++++++++++++++++++

``嵌入式终端软件`` 由以下构件组成

1. :ref:`Lora设备驱动(shattuckite-driver-lora)`
2. :ref:`Wifi设备驱动(shattuckite-driver-wifi)`
3. :ref:`嵌入式终端核心(shattuckite-edge-core)`
4. 本地数据缓存(redis)

该部分UML组件图如下图所示

.. componentuml:: 嵌入式终端
    :caption: 嵌入式终端UML组件图
    :align: center

设备驱动将与硬件(例如Lora网关或Wifi网卡) , 将传感器数据和执行器的状态映射为Linux文件。
终端核心可通过文件读操作获取传感器与执行器的状态; 终端核心可通过写操作设置执行器的状态。关于文件IPC的更多详情

在系统开机时,嵌入式终端核心将会首先完成 ``初始化操作`` 。初始化时，系统完成的工作包括

1. 检查服务器的可用性，清空本地缓存。 
2. 从服务器获取传感器配置信息，并载入本地Redis缓存
3. 通过设备驱动，检查本地传感器列表与远程列表是否匹配, 如果不匹配，执行更新操作。
4. 以发布者的身份, 向服务器Broker订阅一个Topic1, 用于发布数据.
5. 以订阅者的身份, 向服务器Broker订阅另一个Topic2, 用于接收并处理命令。 

该过程用UML时序图表示如下图

.. TODO:: 此处需要添加UML时序图

在核心初始化完成后入工作状态 , 然后(并行的)完成下列工作

1. 根据本地缓存中的配置数据, 定时将传感器的数据发布到Topic1.
2. 监听Topic2，执行接收到的命令,并将命令执行结果发布到Topic1.
